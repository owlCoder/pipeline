{"version":3,"sources":["Store.js","components/LoadingScreen.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","routes/Configuration.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","cookies","Cookies","initialConfiguration","language","subtitles","quality","initialState","configuration","dbIndex","isInit","isSupported","videos","player","storage","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","videosJsonPromise","isShakaPlayerSupported","isShakaStorageSupported","storageListPromise","onError","qualityValue","trackSelectionCallback","progressCallback","_ref3","_ref4","wrap","_context","prev","next","fetch","then","response","json","shaka","polyfill","installAll","Player","isBrowserSupported","offline","Storage","support","list","error","console","code","addEventListener","_ref2","detail","get","parseInt","tracks","window","customConfig","configure","preferredAudioLanguage","preferredTextLanguage","videoWithAudio","sort","b","height","filter","track","type","videoWithCorrectLanguage","subtitlesTracks","log","concat","toConsumableArray","length","pop","content","progress","dispatchEvent","CustomEvent","Promise","all","sent","slicedToArray","abrupt","payload","objectSpread","stop","_x","apply","this","arguments","reducer","state","_ref5","set","path","LoadingScreen","react_default","createElement","className","style","role","Nav","routes","_useState","useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","isOnline","setIsOnline","node","useRef","setIsOnlineTrue","setIsOnlineFalse","useEffect","navigator","onLine","removeEventListener","handleClickOutside","e","current","contains","target","document","background","react_router_dom","exact","to","aria-expanded","aria-label","onClick","ref","map","key","label","activeClassName","disabled","getStorageEstimate","estimate","quota","usage","Math","round","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","marginTop","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","DownloadInProgress","dateStarted","marginBottom","DownloadManager","_useContext","useContext","_useContext$state","_useState2$","setDownloadInProgress","newDbIndex","updateList","handleProgressEvent","event","_callee2","offlineUri","_context2","remove","debounced","func","wait","immediate","timeout","context","args","callNow","clearTimeout","setTimeout","debounce","_callee3","_context3","react","components_DownloadInProgress","appMetadata","downloaded","reverse","index","mainTrack","find","subTrack","components_DownloadItem","done","components_StorageInfo","max","Home","class","color","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","border","border-radius","MediaItem","onClickDownload","poster","tagline","languages","qualities","isDownloadOptionsOpen","setIsDownloadOptionsOpen","customLanguage","_useState5","_useState6","customSubtitles","_useState7","_useState8","customQuality","setCustomQuality","alt","src","minHeight","opacity","borderRadius","aria-haspopup","data-toggle","aria-labelledby","htmlFor","defaultValue","onChange","value","MediaBrowser","history","searchTerm","setSearchTerm","paddingBottom","placeholder","video","includes","components_MediaItem","assign","videoId","getStoreInProgress","alert","v","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","metadata","params","videoElement","saveVideoPlaybackTime","currentTime","playVideo","playState","playbackTime","confirmAlert","message","buttons","fetchAndPlayVideo","load","offlineVideo","attach","mode","detach","goBack","aria-hidden","maxHeight","controls","autoPlay","languageOptions","Configuration","name","checked","q","App","onUpdate","scrollTo","components_Nav","paddingTop","react_router","component","components_LoadingScreen","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","ReactDOM","render","_ref6","children","_useReducer","useReducer","_useReducer2","Provider","src_App","getElementById","URL","process","href","origin","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.abfcc334.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport Cookies from 'universal-cookie';\nimport shaka from 'shaka-player';\n\nexport const Store = React.createContext();\nconst cookies = new Cookies();\nconst initialConfiguration = {\n  language: 'en',\n  subtitles: 'en',\n  quality: 480,\n};\nconst initialState = {\n  configuration: initialConfiguration,\n  dbIndex: [],\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  player: null,\n  storage: null,\n};\n\nconst init = async (dispatch) => {\n  const videosJsonPromise = fetch('data/videos.json').then(response => response.json());\n\n  shaka.polyfill.installAll();\n\n  const isShakaPlayerSupported = shaka.Player.isBrowserSupported();\n  const isShakaStorageSupported = shaka.offline.Storage.support();\n\n  if (isShakaPlayerSupported && isShakaStorageSupported) {\n    const player = new shaka.Player();\n    const storage = new shaka.offline.Storage(player);\n    const storageListPromise = storage.list();\n\n    const onError = (error) => {\n      console.error('Error code', error.code, 'object', error);\n    };\n    player.addEventListener('error', ({ detail }) => onError(detail));\n\n    const qualityValue = cookies.get('userPreferredQuality');\n\n    // get previous configuration from cookies\n    const configuration = {\n      language: cookies.get('userPreferredAudioLanguage') || initialConfiguration.language,\n      subtitles: cookies.get('userPreferredTextLanguage') || initialConfiguration.subtitles,\n      quality: qualityValue ? parseInt(qualityValue) : initialConfiguration.quality,\n    };\n\n    const trackSelectionCallback = (tracks) => {\n      // HACK: TODO MAYBE: no idea how to access the state inside this function, so I'll just use the cookie\n      // I would prefer to access the state\n      let quality = initialConfiguration.quality;\n      let language = initialConfiguration.language;\n      let subtitles = initialConfiguration.subtitles;\n\n      if (!!cookies.get('userPreferredQuality')) \n        quality = parseInt(cookies.get('userPreferredQuality'));  \n      if (!!cookies.get('userPreferredAudioLanguage'))\n         language = cookies.get('userPreferredAudioLanguage');\n      if (!!cookies.get('userPreferredTextLanguage'))\n         subtitles = cookies.get('userPreferredTextLanguage');\n\n      if (!!window.customConfig) {\n        quality = window.customConfig.quality;\n        language = window.customConfig.language;\n        subtitles = window.customConfig.subtitles;\n\n        window.customConfig = null;\n      }\n      player.configure({\n        preferredAudioLanguage: language,\n        preferredTextLanguage: subtitles,\n      });\n\n      const videoWithAudio = tracks\n        .sort((a, b) => a.height - b.height) // qualities are now sorted from worst to best\n        .filter(track => track.type === 'variant' && track.height <= quality); // choose all qualities smaller than the preferrence\n\n      const videoWithCorrectLanguage = videoWithAudio.filter(track => track.language === language);\n\n      const subtitlesTracks = tracks.filter(track => track.type === 'text').filter(track => track.language === subtitles);\n      console.log(subtitlesTracks);\n      //player.configure({ preferredTextLanguage: subtitles});\n      return [\n        ...subtitlesTracks,\n        videoWithCorrectLanguage.length > 0 ? videoWithCorrectLanguage.pop() : videoWithAudio.pop() // choose english when preferrence is not available\n      ];\n    }\n\n    // make shaka dispatch progress events so that we can have a progress bar when downloading\n    const progressCallback = (content, progress) => window.dispatchEvent(new CustomEvent('storage-progress', { detail: { content, progress } }));\n    player.configure({\n      offline: {\n        progressCallback,\n        trackSelectionCallback,\n      },\n      preferredAudioLanguage: configuration.language,\n      preferredTextLanguage: configuration.subtitles,\n    });\n\n    // get available videos from server\n    // and check offline storage (IndexedDB)\n    // simultaneously (both are async)\n    const [videos, dbIndex] = await Promise.all([\n      videosJsonPromise,\n      storageListPromise,\n    ]);\n\n    // start app\n    return dispatch({\n      type: 'INIT_DONE',\n      payload: {\n        configuration,\n        dbIndex,\n        isInit: true,\n        isSupported: isShakaPlayerSupported && isShakaStorageSupported,\n        player,\n        storage,\n        videos,\n      },\n    });\n  }\n\n  // not supported\n  return dispatch({\n    type: 'INIT_DONE',\n    payload: {\n      ...initialState,\n      isInit: true,\n      isSupported: false,\n    },\n  });\n};\n\nconst reducer = (state, { type, payload, dispatch }) => {\n  switch (type) {\n    case 'INIT':\n      init(dispatch);\n      return state;\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: payload.isInit,\n        isSupported: payload.isSupported,\n        videos: payload.videos,\n        dbIndex: payload.dbIndex,\n        configuration: payload.configuration,\n        player: payload.player,\n        storage: payload.storage,\n      };\n    case 'UPDATE_DB_INDEX':\n      return {\n        ...state,\n        dbIndex: payload.dbIndex,\n      };\n    case 'SET_CONFIG_LANGUAGE':\n      cookies.set('userPreferredAudioLanguage', payload, { path: '/' });\n      state.player.configure({ preferredAudioLanguage: payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          language: payload,\n        },\n      };\n    case 'SET_CONFIG_SUBTITLES':\n      cookies.set('userPreferredTextLanguage', payload, { path: '/' });\n      state.player.configure({ preferredTextLanguage: payload === 'none' ? '' : payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          subtitles: payload,\n        },\n      };\n    case 'SET_CONFIG_QUALITY':\n      cookies.set('userPreferredQuality', payload, { path: '/' });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          quality: payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React from 'react';\n\nconst LoadingScreen = () => (\n  <div className=\"container\" style={{ height: '100vh' }}>\n    <div className=\"row h-100 justify-content-center align-items-center\">\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"sr-only\">Учитавање...</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default LoadingScreen;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(false);\n  const node = useRef();\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => {\n    setIsOnline(window.navigator.onLine);\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n\n    return () => {\n      window.removeEventListener('online', setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  }, []);\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    setIsOpen(false);\n  };\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-light text-white fixed-top\" style={{background: '#149383'}}>\n      <NavLink\n        className=\"navbar-brand text-white\"\n        exact\n        to=\"/\"\n      >\n        Pipiline™\n      </NavLink>\n      <button\n        className=\"navbar-toggler text-white\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)} \n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}\n        ref={node}\n      >\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link text-white\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-light\" disabled>На мрежи</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Ван мреже</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        Доступно је {storageInfo.quota}MB меморијског простора. <br/><br/> У употреби: {storageInfo.usage}MB. <br/><br/>\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn,\n  quality,\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>Датум преузимања: {downloadedOn}</small>\n    <br />\n    <small>Квалитет: {quality}p</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <NavLink\n        className=\"btn btn-primary\"\n        to={`/offline/${id}`}\n      >Преглед видеа</NavLink>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Брисање видеа</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadInProgress = ({ title, dateStarted, progress }) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>Датум преузимања: {dateStarted}</small>\n    <hr />\n    <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n      <div\n        className=\"progress-bar progress-bar-striped progress-bar-animated\"\n        role=\"progressbar\"\n        aria-valuenow={progress * 100}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: `${progress * 100}%` }}\n      />\n    </div>\n  </li>\n);\n\nDownloadInProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  dateStarted: PropTypes.string.isRequired,\n  progress: PropTypes.number.isRequired,\n}\n\nexport default DownloadInProgress;\n","import React, {\n  Fragment,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst debounce = (func, wait, immediate) => {\n\tlet timeout;\n\treturn function() {\n\t\tconst context = this, args = arguments;\n\t\tconst later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\nconst DownloadManager = () => {\n  const { state: { dbIndex, storage }, dispatch } = useContext(Store);\n  const [{ content, progress }, setDownloadInProgress] = useState({ content: null, progress: 0 });\n\n  useEffect(() => {\n    if (!storage) return;\n    const updateList = async () => {\n      const newDbIndex = await storage.list();\n      dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n    };\n    updateList();\n  }, [dispatch, storage]);\n  \n  const handleProgressEvent = event => {\n    setDownloadInProgress(event.detail);\n  };\n  \n  useEffect(() => {\n    window.addEventListener('storage-progress', handleProgressEvent);\n    return () => { // clean up when unmounting\n      window.removeEventListener('storage-progress', handleProgressEvent);\n    };\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    // TODO deleting while a download is in progress messes up the progress bar. thanks shaka\n    await storage.remove(offlineUri);\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  };\n  \n  const debounced = useRef(debounce(async () => {\n    // todo this can happen even if the component is not mounted\n    // this should reload the list of downloads after the progress updates have ceased\n    setDownloadInProgress({\n      content: null,\n      progress: 0,\n    });\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  }, 1000));\n\n  useEffect(() => {\n    content && debounced.current();\n  });\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {content &&\n          <DownloadInProgress title={content.appMetadata.title} progress={progress} dateStarted={content.appMetadata.downloaded} />}\n        {dbIndex.reverse().map(({ appMetadata, offlineUri, tracks }, index) => {\n          const mainTrack = tracks.find(track => track.type === 'variant');\n          const subTrack = tracks.find(track => track.type === 'text');\n\n          return (\n            <DownloadItem\n              title={appMetadata.title}\n              key={`download_${index}_${appMetadata.title}`}\n              done\n              id={appMetadata.id}\n              removeMedia={() => removeMedia(offlineUri)}\n              downloadedOn={appMetadata.downloaded}\n              language={mainTrack.language}\n              subtitles={subTrack ? subTrack.language : 'None'}\n              quality={mainTrack.height}\n            />\n          )})}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => ( \n <div> <br/><br/><br/><br/>\n\t    <div class=\"jumbotron\"  style={{\n\t  color: 'white',\n\t  backgroundImage: \"url(\" + \"http://danijel.rocks/pipeline/Pozadina4.jpg\" + \")\",\n\t  backgroundPosition: 'center',\n\t  backgroundSize: 'cover',\n\t  backgroundRepeat: 'no-repeat',\n\t  height: '200%',\n\t  width: '100%',\n\t  border: '1px solid white',\n\t  \"border-radius\": '25px'\n\t}}\n\t>\n\t  <div class=\"container\">\n\t  <br/><br/>\n\t    <h1 class=\"display-4\">Pipeline је онлајн!</h1>\n\t    <p>Користите навигациони мени како би сте приступили другим могућностима апликације.</p> <br/><br/>\n\t  </div>\n\t</div>\n\t\n</div>\n  );\n \nexport default Home;\n\n\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MediaItem = ({\n  id,\n  onClickDownload,\n  poster,\n  tagline,\n  title,\n  languages,\n  qualities,\n  subtitles,\n}) => {\n  const node = useRef();\n  const [isDownloadOptionsOpen, setIsDownloadOptionsOpen] = useState(false);\n  const [customLanguage, setCustomLanguage] = useState(languages[0]);\n  const [customSubtitles, setCustomSubtitles] = useState(!subtitles.length ? '' : subtitles[0]);\n  const [customQuality, setCustomQuality] = useState(qualities[0]);\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    setIsDownloadOptionsOpen(false);\n  };\n  useEffect(() => {\n    if (isDownloadOptionsOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isDownloadOptionsOpen]);\n\n  return(\n    <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n      <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n        <img\n          alt={`image_${title}`}\n          className=\"card-img-top\"\n          src={poster}\n          style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n        />\n        <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text\">{tagline}</p>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"btn-group\" role=\"group\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={onClickDownload}\n                type=\"button\"\n                title=\"Подразумевано преузимање\"\n              >\n                Преузимање\n              </button>\n              <button\n                aria-expanded=\"false\"\n                aria-haspopup=\"true\"\n                className=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\"\n                data-toggle=\"dropdown\"\n                id={`dropdown_download_options-${id}`}\n                onClick={() => setIsDownloadOptionsOpen(true)}\n                type=\"button\"\n                title=\"Преузимање са посебном конфигурацијом\"\n              >\n                <span className=\"sr-only\">Сакривање менија</span>\n              </button>\n              <div\n                aria-labelledby={`dropdown_download_options-${id}`}\n                className={`dropdown-menu dropdown-menu-right\"${isDownloadOptionsOpen ? ' show' : ''}`}\n                ref={node}\n              >\n                <form className=\"px-4\">\n              <div className=\"form-group row\">\n                    <label className=\"col-form-label col-form-label-sm\" htmlFor={`dropdown_download_options-${id}-quality`}>Квалитет</label>\n                    <select\n                      className=\"custom-select custom-select-sm\"\n                      defaultValue={customQuality || ''}\n                      id={`dropdown_download_options-${id}-quality`}\n                      onChange={e => setCustomQuality(e.target.value)}\n                    >\n                      {qualities.map((quality, index) => <option key={`dropdown_download_options-${id}-quality-${index}`} value={quality}>{quality}p</option>)}\n                    </select>\n                  </div>\n                  <button\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={() => {\n                      window.customConfig = {\n                        language: customLanguage,\n                        subtitles: customSubtitles,\n                        quality: customQuality,\n                      }\n                      onClickDownload();\n                     }}\n                    type=\"button\"\n                  >\n                    Преузимање\n                  </button>\n                </form>\n              </div>\n            </div>\n            <NavLink\n              className=\"btn btn-primary\"\n              exact\n              role=\"button\"\n              to={`/stream/${id}`}\n            >Преглед уживо</NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMediaItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n  poster: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const {\n    state: {\n      dbIndex,\n      storage,\n      videos,\n    },\n   } = useContext(Store);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const downloadVideo = (videoId) => {\n    if (!storage.getStoreInProgress()) { // only one download at a time with shaka\n      if (dbIndex.find(v => v.appMetadata.id === videoId)) { // check if already in storage\n        alert('Видео је већ преузет.');\n        return;\n      }\n      const video = videos.find(v => v.id === videoId);\n      storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Преузимање је у току!');\n  };\n\n  return (\n    <Fragment>\n      <form className=\"input-group\" style={{ paddingBottom: '1rem' }}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Претрага\"\n          onChange={e => setSearchTerm(e.target.value)}\n          value={searchTerm}\n        />\n        {searchTerm && <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => setSearchTerm('')}\n          >\n            Clear\n          </button>\n        </div>}\n      </form>\n      <div className=\"row\">\n        {videos.filter(video => video.title.includes(searchTerm)).map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const {\n    state: {\n      player,\n      storage,\n      videos,\n    },\n  } = useContext(Store);\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n\n    // make linter happy\n    const videoElement = videoEl.current;\n    // attach player to video tag\n\n    const saveVideoPlaybackTime = () => {\n      if (videoElement.currentTime !== 0) {\n          cookies.set(\"videoPlaybackTime:\"+ metadata.id,videoElement.currentTime);\n       }\n    };\n\n    videoElement.addEventListener('pause', saveVideoPlaybackTime);\n    videoElement.addEventListener('ended', saveVideoPlaybackTime);\n\n    const playVideo = (playState) => {\n\n      let playbackTime = cookies.get(`videoPlaybackTime:${metadata.id}`);\n      if (!!playbackTime && parseInt(playbackTime) !== 0) {\n          confirmAlert({\n            title:'Настави где си стао?',\n            message: 'Да ли желите да наставите са гледањем снимка где сте прошли пут стали?',\n            buttons: [\n              {\n                label: 'Настави',\n                onClick: () =>  fetchAndPlayVideo(playState, playbackTime)   \n              },\n              {\n                label: 'Отпочетка',\n                //reset saved playbackTime to 0\n                onClick: () => \n                {\n                  cookies.set(\"videoPlaybackTime:\"+ metadata.id,0);\n                  playbackTime=0;\n                  fetchAndPlayVideo(playState, playbackTime)  \n                }             \n              }\n            ]\n          });\n      } else {\n        fetchAndPlayVideo(playState, playbackTime);\n      }\n    }\n\n    const fetchAndPlayVideo = (playState, playbackTime) => \n    {\n      playState==='stream' ? player.load(metadata.manifestUri, playbackTime) : storage.list().then((list) => { \n        // get offlineUri from storage\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri, playbackTime); \n    });\n  }\n\n\n    player.attach(videoElement);\n\n    if (match.params.mode === 'stream') {\n      playVideo('stream');\n    } else { // mode === 'offline'\n      playVideo('offline');\n    }\n    return () => {\n      // detach player from element when component unmounts\n      player.detach(videoElement);\n      saveVideoPlaybackTime();\n      videoElement.removeEventListener('pause', saveVideoPlaybackTime);\n      videoElement.removeEventListener('ended', saveVideoPlaybackTime);\n    };\n  }, [match, metadata, player, storage]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useContext } from 'react';\nimport { Store } from '../Store';\n\nconst languageOptions = [\n   {\n    label: 'Српски',\n    id: 'en',\n  },\n  {\n    label: 'Енглески',\n    id: 'sr',\n  },\n];\n\nconst Configuration = () => {\n  const { state, dispatch } = useContext(Store);\n  const { configuration } = state;\n\n  return (\n    <div className=\"form-check\">\n      <form>\n        <fieldset className=\"form-group\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Језик</legend>\n              <div className=\"col\">\n                {languageOptions.map(({ label, id }) => (\n                  <div className=\"form-check\" key={`key_language_${id}`}>\n                    <input \n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"languageRadios\"\n                      id={`language_${id}`}\n                      value={id}\n                      checked={id === configuration.language}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_LANGUAGE',\n                        payload: e.target.value,\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`language_${id}`}>\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div> <br/>\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Квалитет видеа</legend>\n              <div className=\"col\">\n                {[1080, 720, 480].map(q => (\n                  <div className=\"form-check\" key={`key_quality_${q}`}>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"qualityRadios\"\n                      id={`quality_${q}`}\n                      value={q}\n                      checked={q === configuration.quality}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_QUALITY',\n                        payload: parseInt(e.target.value),\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`quality_${q}`}>\n                      {q}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n\n};\n\nexport default Configuration;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Store } from './Store';\nimport LoadingScreen from './components/LoadingScreen';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\nimport Configuration from './routes/Configuration';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Снимци часова',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Преузето',\n    path: '/downloads',\n  },\n  {\n    exact: true,\n    key: 'configuration',\n    label: 'Конфигурација - Beta',\n    path: '/configuration',\n  },\n];\n\nconst App = () => { \n  const { state: { isInit, isSupported }, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    !isInit && dispatch({ type: 'INIT', dispatch });\n  });\n\n  if (!isInit) return <LoadingScreen />;\n\n  if (!isSupported) return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      <h4 className=\"alert-heading\">Тренутни прегледач није подржан!</h4>\n      <hr />\n      Unfortunately your browser does not support all required technologies. Please update your browser. Safari on iOS is not supported, but Chrome and Firefox on iOS are.\n    </div>\n  );\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\" style={{ paddingTop: '4.5rem' }}>\n          <Fragment>\n            <Route\n              component={Home}\n              exact\n              path=\"/\"\n            />\n            <Route\n              component={MediaBrowser}\n              exact\n              path=\"/media\"\n            />\n            <Route\n              component={DownloadManager}\n              exact\n              path=\"/downloads\"\n            />\n            <Route\n              component={MediaPlayer}\n              exact\n              path=\"/:mode(stream|offline)/:id\"\n            />\n            <Route\n              component={Configuration}\n              exact\n              path=\"/configuration\"\n            />\n          </Fragment>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}